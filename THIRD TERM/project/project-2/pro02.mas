Input
Store   numCasos
Load    zero
Store   contador
mainLoop, Load    contador
Subt    numCasos
Skipcond 000
Jump    endProg
Input
Store   a_xcoord
Store	Areap_a_xcoord
Input
Store   a_ycoord
Store	Areap_a_ycoord
Input
Store   b_xcoord
Store	Areap_b_xcoord
Input
Store   b_ycoord
Store	Areap_b_ycoord
Input
Store   c_xcoord
Store	Areap_c_xcoord
Input
Store   c_ycoord
Store	Areap_c_ycoord  

/ Verificar si es un triángulo
Load	a_xcoord
Store	IsTriangle_a_xcoord
Load	a_ycoord
Store	IsTriangle_a_ycoord
Load	b_xcoord
Store	IsTriangle_b_xcoord
Load	b_ycoord
Store	IsTriangle_b_ycoord
Load	c_xcoord
Store	IsTriangle_c_xcoord
Load	c_ycoord
Store	IsTriangle_c_ycoord
JNS		IsTriangle
Store	is_valid_triangle
Load	is_valid_triangle
Output
Skipcond 800       / Si es igual a 0, salta a endProg
Jump	endProg     / Si no es triángulo (0), termina el programa
/ Si es triángulo (1), continuamos con el programa normal

JNS		Areap
Store	areavalue
load	pis_trig
Skipcond 800
Jump	mainLoop
load	areavalue
Output
Load	a_xcoord
Store	Per_a_xcoord
Load	a_ycoord
Store	Per_a_ycoord
Load	b_xcoord
Store	Per_b_xcoord
Load	b_ycoord
Store	Per_b_ycoord
Load	c_xcoord
Store	Per_c_xcoord
Load	c_ycoord
Store	Per_c_ycoord
JNS		Per
Output
load	Per_ab
Store	LType_ab
load	Per_bc
Store	LType_bc
load	Per_ca
Store	LType_ca
JnS		LType
Output
JnS		AType
Output
load    contador
Add     one
Store   contador
jump    mainLoop 
endProg,    Halt
a_xcoord, dec 0
a_ycoord, dec 0
b_xcoord, dec 0
b_ycoord, dec 0
c_xcoord, dec 0
c_ycoord, dec 0
contador,   dec 0
numCasos,   dec 0
areavalue, dec 0
is_valid_triangle, dec 0

/ Función para verificar si es un triángulo válido
IsTriangle, Dec 15
/ Primero calcular el área para ver si los puntos son colineales
Load	IsTriangle_b_ycoord
Subt	IsTriangle_c_ycoord
Store	multp_num1
Load	IsTriangle_a_xcoord
Store	multp_num2
JNS		multp
Store	IsTriangle_temp1

Load	IsTriangle_c_ycoord
Subt	IsTriangle_a_ycoord
Store 	multp_num1
Load	IsTriangle_b_xcoord
Store	multp_num2
JnS		multp
Store	IsTriangle_temp2

Load	IsTriangle_a_ycoord
Subt	IsTriangle_b_ycoord
Store	multp_num1
Load	IsTriangle_c_xcoord
Store	multp_num2
JnS		multp
Add		IsTriangle_temp1
Add		IsTriangle_temp2
Store	abs_n
JnS		abs

/ Si el área es cero, los puntos son colineales (no forman triángulo)
Skipcond 400
Jump	IsTriangle_valid
/ No es triángulo válido
Load	zero
JumpI	IsTriangle

/ Es un triángulo válido
IsTriangle_valid, Load one
JumpI	IsTriangle

IsTriangle_temp1, Dec 0
IsTriangle_temp2, Dec 0
IsTriangle_a_xcoord, Dec 0
IsTriangle_a_ycoord, Dec 0
IsTriangle_b_xcoord, Dec 0
IsTriangle_b_ycoord, Dec 0
IsTriangle_c_xcoord, Dec 0
IsTriangle_c_ycoord, Dec 0

mul100,	DEC 4
load	mul100_a
Store	multp_num1
load	onehundred
Store	multp_num2
JNS	multp
JumpI	mul100
mul100_a, DEC 0

div100,	Dec 22
load	div100_a
Store	div_a
load	onehundred
store	div_b
JNS		div
JumpI	div100
div100_a, dec 0

Areap,	dec 21
load	Areap_b_ycoord
subt	Areap_c_ycoord
store	multp_num1
load	Areap_a_xcoord
store	multp_num2
JNS		multp
store	ptemp1
load	Areap_c_ycoord
subt	Areap_a_ycoord
store 	multp_num1
load	Areap_b_xcoord
store	multp_num2
JnS		multp
store	ptemp2
load	Areap_a_ycoord
Subt	Areap_b_ycoord
store	multp_num1
load	Areap_c_xcoord
store	multp_num2
JnS		multp
add		ptemp1
add		ptemp2
store	abs_n
JnS		abs
store	pis_trig
store	div_a
load	two
store	div_b
JnS		div
JumpI	Areap
ptemp1,	DEC 0
ptemp2,	Dec	0
Areap_a_xcoord, dec 0
Areap_a_ycoord, dec 0
Areap_b_xcoord, dec 0
Areap_b_ycoord, dec 0
Areap_c_xcoord, dec 0
Areap_c_ycoord, dec 0
pis_trig, dec 0
twohundred, dec 200

Area,	dec 21
load	Area_b_ycoord
subt	Area_c_ycoord
store	multp_num1
load	Area_a_xcoord
store	multp_num2
JNS		multp
store	div100_a
JnS		div100
store	temp1
load	Area_c_ycoord
subt	Area_a_ycoord
store 	multp_num1
load	Area_b_xcoord
store	multp_num2
JnS		multp
store	div100_a
JnS		div100
store	temp2
load	Area_a_ycoord
Subt	Area_b_ycoord
store	multp_num1
load	Area_c_xcoord
store	multp_num2
JnS		multp
store	div100_a
JnS		div100
add		temp1
add		temp2
store	abs_n
JnS		abs
store	is_trig
store	div_a
load	two
store	div_b
JnS		div
JumpI	Area
temp1,	DEC 0
temp2,	Dec	0
Area_a_xcoord, dec 0
Area_a_ycoord, dec 0
Area_b_xcoord, dec 0
Area_b_ycoord, dec 0
Area_c_xcoord, dec 0
Area_c_ycoord, dec 0
is_trig, dec 0

Per, Dec 3
Load	Per_b_xcoord
subt	Per_a_xcoord
Store	multp_num1
Store	multp_num2
JnS		multp
STORE	Per_temp
Load	Per_b_ycoord
Subt	Per_a_ycoord
Store	multp_num1
Store	multp_num2
JnS		multp
add		Per_temp
store	AType_ab
output
STORE	abs_n
JnS		abs
store	raiz_a
JNS		raiz
output
store	Per_ab
Load	Per_c_xcoord
subt	Per_b_xcoord
Store	multp_num1
Store	multp_num2
JnS		multp
STORE	Per_temp
Load	Per_c_ycoord
Subt	Per_b_ycoord
Store	multp_num1
Store	multp_num2
JnS		multp
add		Per_temp
store	AType_bc
STORE	abs_n
JnS		abs
output
store	raiz_a
JNS		raiz
output
store	Per_bc
Load	Per_a_xcoord
subt	Per_c_xcoord
Store	multp_num1
Store	multp_num2
JnS		multp
STORE	Per_temp
Load	Per_a_ycoord
Subt	Per_c_ycoord
Store	multp_num1
Store	multp_num2
JnS		multp
add		Per_temp
STORE	abs_n
JnS		abs
store	raiz_a
store	AType_ca
output
JNS		raiz
output
store	Per_ca
Add		Per_ab
add		Per_bc
JumpI	Per
Per_temp,	Dec 0
Per_a_xcoord,	Dec 0
Per_a_ycoord,	Dec 0
Per_ab,			Dec 0
Per_b_xcoord,	Dec 0
Per_b_ycoord,	Dec 0
Per_bc,			Dec 0
Per_c_xcoord,	Dec 0
Per_c_ycoord,	Dec 0
Per_ca,			Dec 0

raiz,	Dec 1
clear
Store	raiz_low
load	raiz_max
STORE	raiz_high
clear
Store	raiz_ans
raiz_loop, load	raiz_high
subt	raiz_low
skipcond 	000
Jump	raiz_body
Jump	raiz_end
raiz_body, load raiz_low
add	raiz_high
store	div_a
Load	two
store	div_b
JNS	div
store	raiz_mid
store	multp_num1
store	multp_num2
JnS	multp
store	raiz_cuad
load	raiz_a
subt	raiz_cuad
skipcond	800
jump	raiz_bigger
jump	raiz_lower
raiz_bigger,	load	raiz_mid
subt	one
store	raiz_high
jump	raiz_loop
raiz_lower,		load	raiz_mid
store	raiz_ans
add		one
store	raiz_low
jump	raiz_loop
raiz_end, load 	raiz_mid
store	multp_num1
store	multp_num2
jns		multp
subt	raiz_a
skipcond 400
jump	raiz_endend
load	raiz_mid
store	raiz_ans
raiz_endend, load	raiz_ans
JumpI	raiz
raiz_a,		dec 0
raiz_ans,	dec 0
raiz_cuad,	dec 0
raiz_high,	dec 0
raiz_low,	dec 0
raiz_max, 	dec 181
raiz_mid,	dec 0


max, Dec 3
load max_a
subt max_b
skipcond 800
jump	max_bgrt
load max_a
subt max_c
skipcond 800
jump max_cgrt
load max_a
store	max_ans
load	max_b
store	max_min1
load	max_c
store	max_min2
jump	max_end
max_bgrt,	Load 	max_b
subt	max_c
skipcond 800
jump	max_cgrt
load	max_b
store	max_ans
load	max_a
store	max_min1
load	max_c
store	max_min2
Jump 	max_end
max_cgrt, load max_c
store	max_ans
load	max_a
store	max_min1
load	max_b
store	max_min2
jump	max_end
max_end,	load max_ans
JumpI max
max_a,	dec 0
max_ans, dec 0
max_b, dec 0
max_c, dec 0
max_min1, dec 0
max_min2, dec 0

AType, dec 5
load	AType_ab
store	max_a
load	AType_bc
store	max_b
load	AType_ca
store	max_c
JnS		max
load 	max_min1
add		max_min2
subt	max_ans
skipcond	400
jump	AType_neq
load	AType_rectangulo
jump	AType_end
AType_neq, skipcond	800
jump	AType_ngrt
load	AType_acutangulo
jump	AType_end
AType_ngrt,	load	AType_obtusangulo
jump	AType_end
AType_end,	JumpI	AType
AType_ab,	dec 0
AType_bc,	dec 0
AType_ca,	dec 0
AType_acutangulo, dec 2
AType_obtusangulo, dec 3
AType_rectangulo, dec 1

LType, dec 9
load	LType_ab
store	max_a
load	LType_bc
store	max_b
load	LType_ca
store	max_c
JnS		max
load	max_ans
subt	max_min1
skipcond	400
jump	LType_1dif
load	max_min1
subt	max_min2
skipcond	400
jump	LType_2dif
load	LType_equilatero
jump	LType_end	
LType_1dif, load	max_min1
subt	max_min2
skipcond	400
jump	LType_2dif
load	LType_isoceles
jump	LType_end
LType_2dif,	load	max_ans
subt	max_min2
skipcond	400	
jump	LType_noeq
load	LType_isoceles
jump	LType_end
LType_noeq,	load LType_escaleno
LType_end,	JumpI	LType
LType_ab, dec 0
LType_bc, dec 0
LType_ca, dec 0
LType_equilatero, dec 1
LType_escaleno, dec 3
LType_isoceles, dec 2


div, DEC 2
	clear
	STORE div_c	
	Load div_a
	Store abs_n
	JnS abs
	Store new_a2	
	Load div_b
	Store abs_n
	JnS abs
	Store new_b2	
	load new_a2	
whilediv, subt new_b2
	Store new_a2
	skipcond 000	
	Jump whilebodydiv 
	Jump endwhilediv 
whilebodydiv, load div_c
	add one
	store div_c
	load new_a2
	Jump whilediv		
endwhilediv, load div_a
	Skipcond 000	
	Jump ansb1 
	clear
	Subt div_c
	Store div_c	
ansb1, 	load div_b
	skipcond 000 	
	jump return1	
	clear
	Subt div_c
	Store div_c
return1, load new_a2
	skipcond	800
	jump	return_final
	Load div_c
	add	one
	store	div_c
return_final, load div_c
	JumpI div	
div_a,	dec 0
div_b,	dec 0
div_c,	dec 0
new_a2,	dec 0
new_b2,	dec 0

multp,  dec 21
            load    multp_num1
            skipcond    000
            jump    multp_oneNeg
            load    multp_num2
            skipcond    000
            jump    multp_twoNeg
multp_oneNeg,   load    multp_num2
            skipcond    000
            jump    multp_start
            store   abs_n
            jns     abs
            store   multp_num2
            load    multp_num1
            store   abs_n
            jns     abs
            store   multp_num1
            jump    multp_start
multp_twoNeg,   load    multp_num1
            skipcond    000
            jump    multp_start
            store   abs_n
            jns     abs
            store   multp_num1
            load    multp_num2
            store   abs_n
            jns     abs
            store   multp_num2
            jump    multp_start
multp_start,			Load    zero
            Store   multp_I
            Store   multp_Ans
multp_While, Load    multp_I
            subt    multp_num2
            Skipcond    000 
            Jump    multp_end
            Load    multp_Ans
            Add     multp_num1
            Store   multp_Ans
            Load    multp_I
            Add     one
			Store	multp_I
            Jump    multp_While
multp_end,   Load    multp_Ans
			jumpi	multp         
multp_num1, Dec 0
multp_num2,	Dec 0
multp_I,	Dec 0
multp_Ans, Dec 0          



abs,	DEC 4
	Load abs_n
	skipcond 000 
	Jump abs_end
	CLEAR
	Subt abs_n
	Store abs_n
abs_end, Load abs_n
	JumpI abs
abs_n,	DEC 0
        

zero,       dec 0
one,        dec 1
two,		Dec 2
ten,		dec 10
onehundred, DEC 100